//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/_Scripts/User-Scripts/Player_Scirpts/New-Input/Controlls-Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControllsPlayer : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControllsPlayer()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controlls-Player"",
    ""maps"": [
        {
            ""name"": ""Controls"",
            ""id"": ""5b53788f-ebd3-494a-8d0a-f1c9f54326e3"",
            ""actions"": [
                {
                    ""name"": ""----Pass Through----"",
                    ""type"": ""Button"",
                    ""id"": ""e6d0cbfa-9ba8-4cce-83c5-9527d77a2e9a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""_Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9bd1d47e-3e8e-431a-9bf2-f0c695b665c5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""_MousePos"",
                    ""type"": ""Value"",
                    ""id"": ""8df7ee78-ff75-41be-b646-4a0e2b0d4677"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""----Buttons----"",
                    ""type"": ""Button"",
                    ""id"": ""cae5f3dd-9c2e-4537-a2af-76087d10f9e1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""_Jump"",
                    ""type"": ""Value"",
                    ""id"": ""dc234cbc-7633-4dc8-a8d0-4f1d0e3a5e0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""_Join"",
                    ""type"": ""Button"",
                    ""id"": ""c6b0aaab-ff3e-407e-8607-603d9ab460d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""_Grab"",
                    ""type"": ""Value"",
                    ""id"": ""95a40b00-23e9-4577-8543-95c3abc4b345"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keybinds - W-A-S-D"",
                    ""id"": ""5a5a3e36-7012-4b78-b276-55e9d690a22b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""_Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""447ecc14-714d-49f5-9fab-576b6c6a8941"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0ba3289a-a915-4964-bf8e-5dbf4d67ffdf"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""940d264f-8c20-46fc-848e-56dacc7d7756"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6105b071-29b4-4fdc-9d54-bc719a63d797"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keybinds - Arrowkeys"",
                    ""id"": ""3106e52f-b2d5-474c-b831-5ed671d92591"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""_Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1643c356-8c6a-4dfd-865b-815179380018"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3ba6b451-c541-479d-a231-239f28d4e061"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""abff6855-58dd-42da-bda5-4501f0406921"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0155cf04-985c-4077-b692-2db0def15ffd"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keybinds - Gamepad"",
                    ""id"": ""2ac9fa5e-f052-45b4-b777-6ea9cfd78e16"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""_Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9b33e9a4-c24f-4b5c-9e60-14f812fe4c04"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2d18d90f-a9a8-4ec4-98d1-5979b021bad6"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d6510d51-76f6-4ae7-8619-c0437ae62c7a"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9b285d0b-c1a1-4f5f-98df-b2c58406623c"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keybinds - D-Gamepad"",
                    ""id"": ""1184ea22-99b8-4857-afbe-efb8ffee029c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""_Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7d36440a-8c13-44ef-ac4e-0c6e5c530ba3"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9f8cfb95-fb30-4c89-af05-706da4a0d835"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b9851971-fa73-40bf-8306-830b778708fa"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""481db5d7-917b-4941-b4bb-21889b7c6595"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5ea0cfe9-50f4-46c2-b3e9-ea8d04924b54"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""_Join"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f2dc95e-995a-4bb8-964d-1805bb7e52a5"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Join"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f7a90e4-c7cb-4319-8bef-6333e86efe35"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""_Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d42b8d6d-5715-484e-9167-3dd0f6c6d5eb"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b21a6f4-dd54-4e08-800e-a0d43df34cdc"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""_MousePos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2511226d-bcaa-4d64-955b-283c29d5baff"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_MousePos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34e8ed78-703b-4535-a371-b1050ce164c1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KBM"",
                    ""action"": ""_Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b99c995-f6a7-4e39-98e3-bf5b7a57a69c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Ui"",
            ""id"": ""5d1368de-7de9-44ed-81af-89201cb4b068"",
            ""actions"": [
                {
                    ""name"": ""_Start"",
                    ""type"": ""Value"",
                    ""id"": ""8b28202a-886a-474e-b03a-c31399f38395"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""_Options"",
                    ""type"": ""Value"",
                    ""id"": ""9b723fbc-9047-4d37-b5f0-b4b592c90585"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""_Quit"",
                    ""type"": ""Value"",
                    ""id"": ""3a627865-dac2-4abb-94a3-f410bba3f5f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0f8d13ce-c8f7-46eb-8346-6ef8437c428f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97ed520a-b267-418d-be7f-8a1de366e3be"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e430609c-1520-4e91-9060-663ced0ab07e"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Options"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27f057a7-9f76-4cb4-b2bd-886fcf4f0b69"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""_Quit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KBM"",
            ""bindingGroup"": ""KBM"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""GamePad"",
            ""bindingGroup"": ""GamePad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Controls
        m_Controls = asset.FindActionMap("Controls", throwIfNotFound: true);
        m_Controls_PassThrough = m_Controls.FindAction("----Pass Through----", throwIfNotFound: true);
        m_Controls__Movement = m_Controls.FindAction("_Movement", throwIfNotFound: true);
        m_Controls__MousePos = m_Controls.FindAction("_MousePos", throwIfNotFound: true);
        m_Controls_Buttons = m_Controls.FindAction("----Buttons----", throwIfNotFound: true);
        m_Controls__Jump = m_Controls.FindAction("_Jump", throwIfNotFound: true);
        m_Controls__Join = m_Controls.FindAction("_Join", throwIfNotFound: true);
        m_Controls__Grab = m_Controls.FindAction("_Grab", throwIfNotFound: true);
        // Ui
        m_Ui = asset.FindActionMap("Ui", throwIfNotFound: true);
        m_Ui__Start = m_Ui.FindAction("_Start", throwIfNotFound: true);
        m_Ui__Options = m_Ui.FindAction("_Options", throwIfNotFound: true);
        m_Ui__Quit = m_Ui.FindAction("_Quit", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Controls
    private readonly InputActionMap m_Controls;
    private IControlsActions m_ControlsActionsCallbackInterface;
    private readonly InputAction m_Controls_PassThrough;
    private readonly InputAction m_Controls__Movement;
    private readonly InputAction m_Controls__MousePos;
    private readonly InputAction m_Controls_Buttons;
    private readonly InputAction m_Controls__Jump;
    private readonly InputAction m_Controls__Join;
    private readonly InputAction m_Controls__Grab;
    public struct ControlsActions
    {
        private @ControllsPlayer m_Wrapper;
        public ControlsActions(@ControllsPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @PassThrough => m_Wrapper.m_Controls_PassThrough;
        public InputAction @_Movement => m_Wrapper.m_Controls__Movement;
        public InputAction @_MousePos => m_Wrapper.m_Controls__MousePos;
        public InputAction @Buttons => m_Wrapper.m_Controls_Buttons;
        public InputAction @_Jump => m_Wrapper.m_Controls__Jump;
        public InputAction @_Join => m_Wrapper.m_Controls__Join;
        public InputAction @_Grab => m_Wrapper.m_Controls__Grab;
        public InputActionMap Get() { return m_Wrapper.m_Controls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControlsActions set) { return set.Get(); }
        public void SetCallbacks(IControlsActions instance)
        {
            if (m_Wrapper.m_ControlsActionsCallbackInterface != null)
            {
                @PassThrough.started -= m_Wrapper.m_ControlsActionsCallbackInterface.OnPassThrough;
                @PassThrough.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.OnPassThrough;
                @PassThrough.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.OnPassThrough;
                @_Movement.started -= m_Wrapper.m_ControlsActionsCallbackInterface.On_Movement;
                @_Movement.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.On_Movement;
                @_Movement.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.On_Movement;
                @_MousePos.started -= m_Wrapper.m_ControlsActionsCallbackInterface.On_MousePos;
                @_MousePos.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.On_MousePos;
                @_MousePos.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.On_MousePos;
                @Buttons.started -= m_Wrapper.m_ControlsActionsCallbackInterface.OnButtons;
                @Buttons.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.OnButtons;
                @Buttons.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.OnButtons;
                @_Jump.started -= m_Wrapper.m_ControlsActionsCallbackInterface.On_Jump;
                @_Jump.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.On_Jump;
                @_Jump.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.On_Jump;
                @_Join.started -= m_Wrapper.m_ControlsActionsCallbackInterface.On_Join;
                @_Join.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.On_Join;
                @_Join.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.On_Join;
                @_Grab.started -= m_Wrapper.m_ControlsActionsCallbackInterface.On_Grab;
                @_Grab.performed -= m_Wrapper.m_ControlsActionsCallbackInterface.On_Grab;
                @_Grab.canceled -= m_Wrapper.m_ControlsActionsCallbackInterface.On_Grab;
            }
            m_Wrapper.m_ControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PassThrough.started += instance.OnPassThrough;
                @PassThrough.performed += instance.OnPassThrough;
                @PassThrough.canceled += instance.OnPassThrough;
                @_Movement.started += instance.On_Movement;
                @_Movement.performed += instance.On_Movement;
                @_Movement.canceled += instance.On_Movement;
                @_MousePos.started += instance.On_MousePos;
                @_MousePos.performed += instance.On_MousePos;
                @_MousePos.canceled += instance.On_MousePos;
                @Buttons.started += instance.OnButtons;
                @Buttons.performed += instance.OnButtons;
                @Buttons.canceled += instance.OnButtons;
                @_Jump.started += instance.On_Jump;
                @_Jump.performed += instance.On_Jump;
                @_Jump.canceled += instance.On_Jump;
                @_Join.started += instance.On_Join;
                @_Join.performed += instance.On_Join;
                @_Join.canceled += instance.On_Join;
                @_Grab.started += instance.On_Grab;
                @_Grab.performed += instance.On_Grab;
                @_Grab.canceled += instance.On_Grab;
            }
        }
    }
    public ControlsActions @Controls => new ControlsActions(this);

    // Ui
    private readonly InputActionMap m_Ui;
    private IUiActions m_UiActionsCallbackInterface;
    private readonly InputAction m_Ui__Start;
    private readonly InputAction m_Ui__Options;
    private readonly InputAction m_Ui__Quit;
    public struct UiActions
    {
        private @ControllsPlayer m_Wrapper;
        public UiActions(@ControllsPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @_Start => m_Wrapper.m_Ui__Start;
        public InputAction @_Options => m_Wrapper.m_Ui__Options;
        public InputAction @_Quit => m_Wrapper.m_Ui__Quit;
        public InputActionMap Get() { return m_Wrapper.m_Ui; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UiActions set) { return set.Get(); }
        public void SetCallbacks(IUiActions instance)
        {
            if (m_Wrapper.m_UiActionsCallbackInterface != null)
            {
                @_Start.started -= m_Wrapper.m_UiActionsCallbackInterface.On_Start;
                @_Start.performed -= m_Wrapper.m_UiActionsCallbackInterface.On_Start;
                @_Start.canceled -= m_Wrapper.m_UiActionsCallbackInterface.On_Start;
                @_Options.started -= m_Wrapper.m_UiActionsCallbackInterface.On_Options;
                @_Options.performed -= m_Wrapper.m_UiActionsCallbackInterface.On_Options;
                @_Options.canceled -= m_Wrapper.m_UiActionsCallbackInterface.On_Options;
                @_Quit.started -= m_Wrapper.m_UiActionsCallbackInterface.On_Quit;
                @_Quit.performed -= m_Wrapper.m_UiActionsCallbackInterface.On_Quit;
                @_Quit.canceled -= m_Wrapper.m_UiActionsCallbackInterface.On_Quit;
            }
            m_Wrapper.m_UiActionsCallbackInterface = instance;
            if (instance != null)
            {
                @_Start.started += instance.On_Start;
                @_Start.performed += instance.On_Start;
                @_Start.canceled += instance.On_Start;
                @_Options.started += instance.On_Options;
                @_Options.performed += instance.On_Options;
                @_Options.canceled += instance.On_Options;
                @_Quit.started += instance.On_Quit;
                @_Quit.performed += instance.On_Quit;
                @_Quit.canceled += instance.On_Quit;
            }
        }
    }
    public UiActions @Ui => new UiActions(this);
    private int m_KBMSchemeIndex = -1;
    public InputControlScheme KBMScheme
    {
        get
        {
            if (m_KBMSchemeIndex == -1) m_KBMSchemeIndex = asset.FindControlSchemeIndex("KBM");
            return asset.controlSchemes[m_KBMSchemeIndex];
        }
    }
    private int m_GamePadSchemeIndex = -1;
    public InputControlScheme GamePadScheme
    {
        get
        {
            if (m_GamePadSchemeIndex == -1) m_GamePadSchemeIndex = asset.FindControlSchemeIndex("GamePad");
            return asset.controlSchemes[m_GamePadSchemeIndex];
        }
    }
    public interface IControlsActions
    {
        void OnPassThrough(InputAction.CallbackContext context);
        void On_Movement(InputAction.CallbackContext context);
        void On_MousePos(InputAction.CallbackContext context);
        void OnButtons(InputAction.CallbackContext context);
        void On_Jump(InputAction.CallbackContext context);
        void On_Join(InputAction.CallbackContext context);
        void On_Grab(InputAction.CallbackContext context);
    }
    public interface IUiActions
    {
        void On_Start(InputAction.CallbackContext context);
        void On_Options(InputAction.CallbackContext context);
        void On_Quit(InputAction.CallbackContext context);
    }
}
